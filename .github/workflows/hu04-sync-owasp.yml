name: H.U.04 - Sincronizaci칩n de Datos + OWASP

on:
  push:
    branches: [ "main" ]
    paths:
      - "tests/hu04/**"
      - "actions/api/services/lectura_service.py"
      - "actions/api/endpoints/lectura_router.py"
      - ".github/workflows/hu04-sync-owasp.yml"
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  hu04-sync:
    runs-on: ubuntu-latest

    env:
      MONGO_URI: ${{ secrets.MONGO_URI }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}

    services:
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - name: Checkout c칩digo
      uses: actions/checkout@v4

    - name: Configurar Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Instalar dependencias
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Ejecutar tests H.U.04 - Sincronizaci칩n de Datos
      run: |
        export PYTHONPATH=$PYTHONPATH:$(pwd)
        pytest tests/hu04/test_sync_readings.py --cov=actions --cov-report=xml

    - name: OWASP Dependency-Check - An치lisis de Vulnerabilidades
      uses: dependency-check/Dependency-Check_Action@v3.1.2
      with:
        project: "HU04-Sincronizacion"
        scanPath: "."
        format: "HTML,JSON"
        failOnCVSS: 7.0
        outputDirectory: reports/hu04-owasp

    - name: Subir reportes de cobertura y seguridad
      uses: actions/upload-artifact@v4
      with:
        name: hu04-sync-reports
        path: |
          coverage.xml
          reports/hu04-owasp
