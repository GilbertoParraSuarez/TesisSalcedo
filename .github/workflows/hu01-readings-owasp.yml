name: H.U.01 - Gestión de Lecturas de Sensores + OWASP

on:
  push:
    branches: [ main ]
    paths:
      - "tests/hu01/**"
      - "actions/api/services/lectura_service.py"
      - "actions/api/endpoints/lectura_router.py"
      - ".github/workflows/hu01-readings-owasp.yml"
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  hu01-readings:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      MONGO_URI: ${{ secrets.MONGO_URI }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}

    steps:
    - name: Checkout código
      uses: actions/checkout@v4

    - name: Configurar Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Instalar dependencias
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Ejecutar tests H.U.01
      run: |
        export PYTHONPATH=$PYTHONPATH:$(pwd)
        pytest tests/hu01/test_readings.py --cov=actions --cov-report=xml

    - name: Crear carpeta de reportes OWASP
      run: mkdir -p reports/hu01-owasp

    - name: OWASP Dependency-Check - Análisis de Vulnerabilidades
      run: |
        docker run --rm \
          -v "$(pwd):/src" \
          -v "$(pwd)/reports/hu01-owasp:/report" \
          owasp/dependency-check:latest \
          --project "HU01-LecturasSensores" \
          --scan /src \
          --format "HTML,JSON" \
          --failOnCVSS 11.0 \
          --out /report

    - name: Subir reportes de cobertura y seguridad
      uses: actions/upload-artifact@v4
      with:
        name: hu01-reports
        path: |
          coverage.xml
          reports/hu01-owasp
