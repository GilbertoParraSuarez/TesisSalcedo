name: Tests + Coverage + OWASP Dependency-Check

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  coverage-and-security:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      MONGO_URI: ${{ secrets.MONGO_URI }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    steps:
    - name: Checkout código
      uses: actions/checkout@v3

    - name: Configurar Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Instalar dependencias
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Ejecutar tests y generar cobertura
      run: |
        export PYTHONPATH=$PYTHONPATH:$(pwd)
        pytest --cov=actions --cov-report=xml

    - name: OWASP Dependency-Check - Análisis de Vulnerabilidades
      uses: dependency-check/Dependency-Check_Action@v3.1.2
      with:
        project: "TesisSalcedo"
        scanPath: "."
        format: "HTML,JSON"
        failOnCVSS: 7.0
        outputDirectory: reports/dependency-check

    - name: Subir reporte de OWASP Dependency-Check
      uses: actions/upload-artifact@v4
      with:
        name: owasp-dependency-check-report
        path: reports/dependency-check

    - name: SonarCloud Scan con Coverage
      uses: SonarSource/sonarqube-scan-action@v5.0.0
      with:
        args: >
          -Dsonar.projectKey=GilbertoParraSuarez_TesisSalcedo
          -Dsonar.organization=gilbertoparrasuarez
          -Dsonar.sources=actions
          -Dsonar.exclusions=**/tests/**,**/__pycache__/**
          -Dsonar.python.version=3.11
          -Dsonar.sourceEncoding=UTF-8
          -Dsonar.python.coverage.reportPaths=coverage.xml

    - name: SonarCloud Quality Gate Check
      uses: SonarSource/sonarqube-quality-gate-action@v1.1.0
      with:
        scanMetadataReportFile: .scannerwork/report-task.txt
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
